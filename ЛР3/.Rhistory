V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.6
colnames(edges)[4] <- "weight"
E(net)$edge.arrow.size <- 1+E(net)$weight/12
net <- simplify(net, remove.loops = T)
E(net)$edge.arrow.size <- 1+E(net)$weight/12
edges <- read.csv("Dataset1-Media-Example-EDGES.csv", header=T)
edges <- aggregate(edges[,3], edges[,-3], sum)
net <- graph.data.frame(edges, nodes, directed=T)
plot(net)
net <- simplify(net, remove.loops = T)
plot(net, vertex.color='green', vertex.size=15, edge.color='blue', edge.arrow.size=.5)
colour <- c("red", "yellow", "green")
V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.6
colnames(edges)[4] <- "weight"
E(net)$edge.arrow.size <- 1+E(net)$weight/12
edges <- read.csv("Dataset1-Media-Example-EDGES.csv", header=T)
nodes
edges
nrow(edges)
nrow(unique(edges[,c("from", "to")]))
edges <- aggregate(edges[,3], edges[,-3], sum)
install.packages("igraph")
library('igraph')
net <- graph.data.frame(edges, nodes, directed=T)
plot(net)
net <- simplify(net, remove.loops = T)
plot(net, vertex.color='green', vertex.size=15, edge.color='blue', edge.arrow.size=.5)
colour <- c("red", "yellow", "green")
V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.6
V(net)$label <- NA
# Set edge width based on weight:
E(net)$width <- E(net)$weight/6
edges
V(net)$size <- 1+E(net)$weight/12
E(net)$edge.arrow.size <- edges[,4]
colnames(edges)[4] <- "weight"
E(net)$width <- E(net)$weight/6
plot(net, vertex.color='green', vertex.size=15, edge.color='blue', edge.arrow.size=.5, edge.width=3)
E(net)$width <- E(net)$weight/6
E(net)$weight
E(net)
V(net)
V(net)$audience.size
net <- simplify(net, remove.loops = T,  remove.multiple = F)
plot(net, vertex.color='green', vertex.size=15, edge.color='blue', edge.arrow.size=.5, edge.width=3)
plot(net, vertex.color='green', vertex.size=15, edge.color='blue', edge.arrow.size=.5)
V(net)$audience.size
E(net)$weight
E(net)$from
E(net)$type
edges
net
net <- graph.data.frame(edges, nodes, directed=T)
net
edges <- read.csv("Dataset1-Media-Example-EDGES.csv", header=T)
edges <- aggregate(edges[,3], edges[,-3], sum)
edges <- edges[order(edges$from, edges$to),]
colnames(edges)[4] <- "weight"
rownames(edges) <- NULL
edges
rownames(edges) <- NULL
edges
net <- graph.data.frame(edges, nodes, directed=T)
net
edges <- read.csv("Dataset1-Media-Example-EDGES.csv", header=T)
edges <- aggregate(edges[,3], edges[,-3], sum)
colnames(edges)[4] <- "weight"
edges <- read.csv("Dataset1-Media-Example-EDGES.csv", header=T)
edges <- aggregate(edges[,3], edges[,-3], sum)
colnames(edges)[4] <- "weight"
net <- graph.data.frame(edges, nodes, directed=T)
net
E(net)$type
E(net)$width <- E(net)$weight/6
plot(net, edge.arrow.size=.5, vertex.label.cex=0.8)
nodes <- read.csv("Dataset1-Media-Example-NODES.csv", header=T)
edges <- read.csv("Dataset1-Media-Example-EDGES.csv", header=T)
nodes
edges
nrow(edges)
nrow(unique(edges[,c("from", "to")]))
edges <- aggregate(edges[,3], edges[,-3], sum)
colnames(edges)[4] <- "weight"
library('igraph')
net <- graph.data.frame(edges, nodes, directed=T)
net
plot(net)
net <- simplify(net, remove.loops = T)
plot(net, vertex.color='green', vertex.size=15, edge.color='blue', edge.arrow.size=.5)
colour <- c("red", "yellow", "green")
V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.6
E(net)$width <- E(net)$weight/6
plot(net, edge.arrow.size=.5, vertex.label.cex=0.8)
plot(net, edge.arrow.size=.5, vertex.label.cex=0.8,  edge.arrow.size=.5)
plot(net, edge.arrow.size=.5, vertex.label.cex=0.8,  edge.arrow.size=.3)
plot(net, edge.arrow.size=.5, vertex.label.cex=0.8,  edge.arrow.size=.1)
plot(net, edge.arrow.size=.5, vertex.label.cex=0.8,  edge.arrow.size=1)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=1)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.1)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
V(net)$size <- V(net)$audience.size*0.7
E(net)$width <- E(net)$weight/6
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
V(ne)label=V(net)$media
V(net)label=V(net)$media
V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(c("Newspaper","Television", "Online News"))
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(c("Newspaper","Television", "Online News"))
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"), pch=21,
col="#777777", pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"), pch=21,
col="#777777", pt.bg=colour, pt.cex=2, cex=.8, bty="n", ncol=1)
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"), pch=21,
pt.bg=colour, pt.cex=2, cex=.8, bty="n", ncol=1)
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"), pch=21,
pt.bg=colour, ncol=1)
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"), pch=21,
pt.bg=colour)
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"),pt.bg=colour)
legend(c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
x=-1.5, y=-1.1,
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
E(net)$width <- E(net)$weight/2
V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
colour <- c("red", "yellow", "green")
V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.6
E(net)$width <- E(net)$weight/4
V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
colour <- c("red", "yellow", "green")
V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.6
E(net)$width <- E(net)$weight/4
V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(x=-1.5, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
colour <- c("red", "yellow", "green")
V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.6
E(net)$width <- E(net)$weight/4
V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
E(net)$width <- E(net)$weight/5
V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
net <- graph.data.frame(edges, nodes, directed=F)
colour <- c("red", "yellow", "green")
V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.6
E(net)$width <- E(net)$weight/5
V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
V(net)$size <- V(net)$audience.size*2
E(net)$width <- E(net)$weight/5
V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
V(net)$size <- V(net)$audience.size*0.5
E(net)$width <- E(net)$weight/5
V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
net <- graph.data.frame(edges, nodes, directed=T)
net
plot(net)
net <- simplify(net, remove.loops = T)
plot(net, vertex.color='green', vertex.size=15, edge.color='blue', edge.arrow.size=.5)
colour <- c("red", "yellow", "green")
V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.5
E(net)$width <- E(net)$weight/5
V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
colour <- c("red", "yellow", "green")
V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.5
E(net)$width <- E(net)$weight/5
#V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
nodes <- read.csv("Dataset1-Media-Example-NODES.csv", header=T)
edges <- read.csv("Dataset1-Media-Example-EDGES.csv", header=T)
nodes
edges
nrow(edges)
nrow(unique(edges[,c("from", "to")]))
edges <- aggregate(edges[,3], edges[,-3], sum)
colnames(edges)[4] <- "weight"
library('igraph')
net <- graph.data.frame(edges, nodes, directed=T)
net
plot(net)
net <- simplify(net, remove.loops = T)
plot(net, vertex.color='green', vertex.size=15, edge.color='blue', edge.arrow.size=.5)
colour <- c("red", "yellow", "green")
V(net)$color <- colour[V(net)$media.type]
V(net)$size <- V(net)$audience.size*0.5
E(net)$width <- E(net)$weight/5
#V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"),pt.bg=colour)
#V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"),pt.bg=colour)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=0, pt.bg=colour)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=15, pt.bg=colour)
21
#V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
#V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=0, pt.bg=colour)
#V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=15, pt.bg=colour)
#V(net)$label=V(net)$media
plot(net, vertex.label.cex=0.8,  edge.arrow.size=0.3, vertex.label.font=2)
legend(x=-1, y=-1.1, c("Newspaper","Television", "Online News"), pch=21, pt.bg=colour)
###########     часть 2
data <- read.csv("TreeMap.csv", header=T)
data
find_na <- function(data){
sum =0
for(i in 1:nrow(data)){
for (j in 1:ncol(data))
{
sum<-sum+is.na(cars[i,j])
}
}
print(sum)
}
find_na(data)
find_na <- function(data){
sum =0
for(i in 1:nrow(data)){
for (j in 1:ncol(data))
{
sum<-sum+is.na(dat[i,j])
}
}
print(sum)
}
find_na(data)
find_na <- function(data){
sum =0
for(i in 1:nrow(data)){
for (j in 1:ncol(data))
{
sum<-sum+is.na(dat[i,j])
}
}
print(sum)
}
find_na(data)
find_na <- function(data){
sum =0
for(i in 1:nrow(data)){
for (j in 1:ncol(data))
{
sum<-sum+is.na(dat[i,j])
}
}
print(sum)
}
find_na(data)
find_na <- function(data){
sum =0
for(i in 1:nrow(data)){
for (j in 1:ncol(data))
{
sum<-sum+is.na(cars[i,j])
}
}
print(sum)
}
find_na(data)
find_na <- function(data){
sum =0
for(i in 1:nrow(data)){
for (j in 1:ncol(data))
{
sum<-sum+is.na(data[i,j])
}
}
print(sum)
}
find_na(data)
find_na <- function(data){
sum =0
for(i in 1:nrow(data)){
for (j in 1:ncol(data))
{
sum<-sum+is.na(data[i,j])
}
}
print(sum)
}
find_na(data)
###########     часть 2
data <- read.csv("TreeMap.csv", header=T)
data
find_na <- function(data){
sum =0
for(i in 1:nrow(data)){
for (j in 1:ncol(data))
{
sum<-sum+is.na(data[i,j])
}
}
print(sum)
}
find_na(data)
library(treemap)
install.packages("treemap")
library(treemap)
treemap(data, index = c("Category","Sub.Category", "Brand"),
vSize = "High.Bid", fun.aggregate = "mean",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
palette = rev(gray.colors(3)), type = "manual", title = "")
data$negative.feedback <- 1* (data$Seller.Feedback < 0)
treemap(data, index = c("Category","Sub.Category", "Brand"),
vSize = "High.Bid", vColor = "negative.feedback", fun.aggregate = "mean",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
palette = rev(gray.colors(3)), type = "manual", title = "")
treemap(tree.df, index = c("Category","Sub.Category", "Brand"),
vSize = "High.Bid", vColor = "negative.feedback", fun.aggregate = "mean",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
palette = rev(gray.colors(3)), type = "manual", title = "")
treemap(data, index = c("Category","Sub.Category", "Brand"),
vSize = "High.Bid", vColor = "negative.feedback", fun.aggregate = "mean",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
palette = rev(gray.colors(3)), type = "manual", title = "")
treemap(data, index = c("Category","Sub.Category", "Brand"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
palette = rev(gray.colors(3)), type = "manual", title = "")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
palette = rev(gray.colors(3)), type = "manual", title = "")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
palette = rev(gray.colors(3)), type = "manual", title = "")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
type = "manual", title = "")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
title = "")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
title = "карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom"), c("center", "center")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
treemap(data, index = c("Category","Sub.Category"),fun.aggregate = "mean",
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom"),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),fun.aggregate = "mean",
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom")),
fontsize.title = 14,
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom")),
fontsize.title = 2,
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom")),
fontsize.title = 14,
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("left", "top"), c("right", "bottom")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("rihgt", "top"), c("right", "bottom")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("right", "top"), c("right", "bottom")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("right", "top"), c("center", "bottom")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("right", "top"), c("center", "center")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("Center", "top"), c("center", "center")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("center", "top"), c("center", "center")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category"),
vSize = "High.Bid",
align.labels = list(c("center", "top"), c("center", "center")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category", "Brand"),
vSize = "High.Bid",
align.labels = list(c("center", "top"), c("center", "center"), c("center", "bottom")),
title = "Карта деревьев")
treemap(data, index = c("Category","Sub.Category", "Brand"),
vSize = "High.Bid",
align.labels = list(c("center", "top"), c("center", "center"), c("center", "bottom")),
title = "Карта деревьев")
library(readxl)
data2 <- read_excel(path = "gdp.xlsx")
data2 <- read_excel(path = "gdp.xls")
data2
find_na(data2)
find_na <- function(data){
sum =0
for(i in 1:nrow(data)){
for (j in 1:ncol(data))
{
sum<-sum+is.na(data[i,j])
}
}
print(sum)
}
find_na(data)
find_na(data2)
library(mosaic)
install.packages("mosaic")
library(mosaic)
library(mosaic)
mWorldMap(data2, key = "Country.Name", fill = "Gdp") + coord_map()
data2 <- read_excel(path = "gdp.xls", stringsAsFactors = FALSE)
head(data2)
data2 <- read.csv(path = "gdp.csv", stringsAsFactors = FALSE)
data2 <- read.csv("gdp.csv", stringsAsFactors = FALSE)
data2
head(data2)
library(mosaic)
mWorldMap(data2, key = "Country.Name", fill = "Gdp") + coord_map()
data2 <- read.csv("gdp.csv")
data2
head(data2)
find_na(data2)
library(mosaic)
mWorldMap(data2, key = "Country.Name", fill = "Gdp") + coord_map()
data2
mWorldMap(data2, key = "Country.Name", fill = "Gdp") + coord_map() + color="gray70"
mWorldMap(data2, key = "Country.Name", fill = "Gdp", color="gray70") + coord_map()
mWorldMap(data2, key = "Country.Name", fill = "Gdp")
library(mosaic)
mWorldMap(data2, key = "Country.Name", fill = "Gdp")
